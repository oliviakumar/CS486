const rawRoutes = JSON.parse('[
{"route_id":"A_C","from":"A","to":"C","duration":8},{"route_id":"A_E","from":"A","to":"E","duration":4},{"route_id":"A_F","from":"A","to":"F","duration":8},{"route_id":"A_H","from":"A","to":"H","duration":7},{"route_id":"B_A","from":"B","to":"A","duration":10},{"route_id":"B_C","from":"B","to":"C","duration":3},{"route_id":"B_D","from":"B","to":"D","duration":7},{"route_id":"B_G","from":"B","to":"G","duration":8},{"route_id":"B_H","from":"B","to":"H","duration":1},{"route_id":"C_B","from":"C","to":"B","duration":6},{"route_id":"C_F","from":"C","to":"F","duration":7},{"route_id":"C_G","from":"C","to":"G","duration":10},{"route_id":"C_H","from":"C","to":"H","duration":2},{"route_id":"D_B","from":"D","to":"B","duration":3},{"route_id":"D_C","from":"D","to":"C","duration":1},{"route_id":"D_E","from":"D","to":"E","duration":9},{"route_id":"D_F","from":"D","to":"F","duration":8},{"route_id":"D_G","from":"D","to":"G","duration":10},{"route_id":"E_A","from":"E","to":"A","duration":8},{"route_id":"E_C","from":"E","to":"C","duration":1},{"route_id":"E_F","from":"E","to":"F","duration":3},{"route_id":"E_G","from":"E","to":"G","duration":4},{"route_id":"F_A","from":"F","to":"A","duration":2},{"route_id":"F_B","from":"F","to":"B","duration":9},{ "route_id":"F_C","from":"F","to":"C","duration":2},{"route_id":"F_D","from":"F","to":"D","duration":9},{"route_id":"F_G","from":"F","to":"G","duration":4},{"route_id":"G_A","from":"G","to":"A","duration":9},{"route_id":"G_D","from":"G","to":"D","duration":8},{"route_id":"G_E","from":"G","to":"E","duration":11},{"route_id":"G_F","from":"G","to":"F","duration":7},{"route_id":"G_H","from":"G","to":"H","duration":10},{"route_id":"H_A","from":"H","to":"A","duration":1},{"route_id":"H_B","from":"H","to":"B","duration":8},{"route_id":"H_C","from":"H","to":"C","duration":7},{"route_id":"H_D","from":"H","to":"D","duration":8},{"route_id":"H_F","from":"H","to":"F","duration":6}
]');

// Return all possible paths from start node to destination node,
// sorted from shortest duration to longest.
function findShortestPaths(start, destination) {
	return []
}
(here is a matrix representation - the columns are the "to" and the "from" is the rows so the route A->C, which has a duration of 8, is first row, third column)

0 0 8 0 4 8 0 7
10 0 3 7 0 0 8 1
0 6 0 0 0 7 10 2
0 3 1 0 9 8 10 0
8 0 1 0 0 3 4 0
2 9 2 9 0 0 4 0
9 0 0 8 11 7 0 10
1 8 7 8 0 6 0 0

